<%- include('../partials/header') %>

<main class="w-full min-h-[100vh] sm:px-5 flex justify-center items-center bg-midnight">
  <div class="w-full sm:w-max min-h-[100vh] flex flex-col justify-center px-10  bg-white ">
    <h1 class="block my-5 font-bold text-center text-3xl text-midnight">
      Buat Akun
    </h1>

    <form class="w-full sm:max-w-[400px] md:max-w-[500px]">
      <div class="relative z-0 w-full mb-6 group">
        <input
          type="text"
          name="username"
          id="username"
          class="block py-2.5 px-0 w-full text-sm sm:text-base text-gray-900 bg-transparent border-0 border-b-2 border-gray-300 appearance-none dark:text-white dark:border-gray-600 dark:focus:border-rose focus:outline-none focus:ring-0 focus:border-rose peer"
          placeholder=" "
          autofocus
          required
        />
        <label
          for="username"
          class="peer-focus:font-medium absolute text-sm sm:text-base text-gray-500 dark:text-gray-400 duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-focus:left-0 peer-focus:text-rose peer-focus:dark:text-rose peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6"
          >Username <span class="text-red-600">*</span></label
        >
        <div
          id="username_error"
          class="mt-1 text-sm sm:text-base text-red-700"
        ></div>
      </div>
      <div class="relative z-0 w-full mb-6 group">
        <input
          type="email"
          name="floating_email"
          id="email"
          class="block py-2.5 px-0 w-full text-sm sm:text-base lowercase text-gray-900 bg-transparent border-0 border-b-2 border-gray-300 appearance-none dark:text-white dark:border-gray-600 dark:focus:border-rose focus:outline-none focus:ring-0 focus:border-rose peer"
          placeholder=" "
          required
        />
        <label
          for="floating_email"
          class="peer-focus:font-medium absolute text-sm sm:text-base text-gray-500 dark:text-gray-400 duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-focus:left-0 peer-focus:text-rose peer-focus:dark:text-rose peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6"
          >Email <span class="text-red-600">*</span></label
        >
        <div
          id="email_error"
          class="mt-1 text-sm sm:text-base text-red-700"
        ></div>
      </div>
      <div class="relative z-0 w-full mb-6 group">
        <input
          type="password"
          name="floating_password"
          id="password"
          class="block py-2.5 px-0 w-full text-sm sm:text-base text-gray-900 bg-transparent border-0 border-b-2 border-gray-300 appearance-none dark:text-white dark:border-gray-600 dark:focus:border-rose focus:outline-none focus:ring-0 focus:border-rose peer"
          placeholder=" "
          required
        />
        <label
          for="floating_password"
          class="peer-focus:font-medium absolute text-sm sm:text-base text-gray-500 dark:text-gray-400 duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-focus:left-0 peer-focus:text-rose peer-focus:dark:text-rose peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6"
          >Password <span class="text-red-600">*</span></label
        >
        <button
          type="button"
          class="eye absolute top-[10px] right-0 w-5 h-5 text-gray-500 cursor-pointer"
        >
          <div class="eye-svg hidden pointer-events-none" name="eye">
            <%- include('../svg/eye-solid') %>
          </div>
          <div class="eye-slash-svg pointer-events-none">
            <%- include('../svg/eye-slash-solid') %>
          </div>
        </button>
        <div
          id="password_error"
          class="mt-1 text-sm sm:text-base text-red-700"
        ></div>
      </div>
      <div class="relative z-0 w-full mb-6 group">
        <input
          type="password"
          name="repeat_password"
          id="confirm_password"
          class="block py-2.5 px-0 w-full text-sm sm:text-base text-gray-900 bg-transparent border-0 border-b-2 border-gray-300 appearance-none dark:text-white dark:border-gray-600 dark:focus:border-rose focus:outline-none focus:ring-0 focus:border-rose peer"
          placeholder=" "
          required
        />
        <label
          for="floating_repeat_password"
          class="peer-focus:font-medium absolute text-sm sm:text-base text-gray-500 dark:text-gray-400 duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-focus:left-0 peer-focus:text-rose peer-focus:dark:text-rose peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6"
          >Konfirmasi password <span class="text-red-600">*</span></label
        >
        <button
          type="button"
          class="eye absolute top-[10px] right-0 w-5 h-5 text-gray-500 cursor-pointer"
        >
          <div class="eye-svg hidden pointer-events-none" name="eye">
            <%- include('../svg/eye-solid') %>
          </div>
          <div class="eye-slash-svg pointer-events-none">
            <%- include('../svg/eye-slash-solid') %>
          </div>
        </button>
        <div
          id="confirm_password_error"
          class="mt-1 text-sm sm:text-base text-red-700"
        ></div>
      </div>
      <div class="grid md:grid-cols-2 md:gap-6">
        <div class="relative z-0 w-full mb-6 group">
          <input
            type="text"
            name="nama_lengkap"
            id="nama_lengkap"
            class="block py-2.5 px-0 w-full text-sm sm:text-base text-gray-900 bg-transparent border-0 border-b-2 border-gray-300 appearance-none dark:text-white dark:border-gray-600 dark:focus:border-rose focus:outline-none focus:ring-0 focus:border-rose peer"
            placeholder=" "
            required
          />
          <label
            for="nama_lengkap"
            class="peer-focus:font-medium absolute text-sm sm:text-base text-gray-500 dark:text-gray-400 duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-focus:left-0 peer-focus:text-rose peer-focus:dark:text-rose peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6"
            >Nama lengkap <span class="text-red-600">*</span></label
          >
          <div
            id="nama_lengkap_error"
            class="mt-1 text-sm sm:text-base text-red-700"
          ></div>
        </div>
        <div class="relative z-0 w-full mb-6 group">
          <input
            type="text"
            name="nama_panggilan"
            id="nama_panggilan"
            class="block py-2.5 px-0 w-full text-sm sm:text-base text-gray-900 bg-transparent border-0 border-b-2 border-gray-300 appearance-none dark:text-white dark:border-gray-600 dark:focus:border-rose focus:outline-none focus:ring-0 focus:border-rose peer"
            placeholder=" "
            required
          />
          <label
            for="nama_panggilan"
            class="peer-focus:font-medium absolute text-sm sm:text-base text-gray-500 dark:text-gray-400 duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-focus:left-0 peer-focus:text-rose peer-focus:dark:text-rose peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6"
            >Nama panggilan <span class="text-red-600">*</span></label
          >
          <div
            id="nama_panggilan_error"
            class="mt-1 text-sm sm:text-base text-red-700"
          ></div>
        </div>
      </div>

      <div class="grid md:grid-cols-2 md:gap-6">
        <div class="flex flex-col items-start">
          <p class="text-center text-sm sm:text-base mb-2 text-gray-500">
            Gender <span class="text-red-600">*</span>
          </p>
          <div class="w-full flex flex-wrap mb-6 justify-start">
            <div class="flex items-center mr-4">
              <input
                id="male"
                type="radio"
                value="m"
                name="gender"
                class="w-4 h-4 text-rose bg-gray-100 border-gray-300 focus:ring-rose dark:focus:ring-rose dark:ring-offset-gray-800 focus:ring-2 dark:bg-gray-700 dark:border-gray-600"
                required
              />
              <label
                for="male"
                class="ml-2 text-sm sm:text-base font-medium text-gray-900 dark:text-gray-300"
                >Laki-laki</label
              >
            </div>
            <div class="flex items-center mr-4">
              <input
                id="female"
                type="radio"
                value="f"
                name="gender"
                class="w-4 h-4 text-rose bg-gray-100 border-gray-300 focus:ring-rose dark:focus:ring-rose dark:ring-offset-gray-800 dark:bg-gray-700 dark:border-gray-600"
                required
              />
              <label
                for="female"
                class="ml-2 text-sm sm:text-base font-medium text-gray-900 dark:text-gray-300"
                >Perempuan</label
              >
            </div>
            <div
              id="gender_error"
              class="mt-1 text-sm sm:text-base text-red-700"
            ></div>
          </div>
        </div>
        <div class="relative w-full mb-6">
          <div
            class="absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none"
          >
            <svg
              aria-hidden="true"
              class="w-5 h-5 text-gray-500 dark:text-gray-400"
              fill="currentColor"
              viewBox="0 0 20 20"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                fill-rule="evenodd"
                d="M6 2a1 1 0 00-1 1v1H4a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2h-1V3a1 1 0 10-2 0v1H7V3a1 1 0 00-1-1zm0 5a1 1 0 000 2h8a1 1 0 100-2H6z"
                clip-rule="evenodd"
              ></path>
            </svg>
          </div>
          <input
            datepicker
            type="datetime"
            id="birthdate"
            autocomplete="off"
            class="border-0 border-b-2 border-gray-300 text-gray-900 text-sm sm:text-base block w-full pl-10 p-2.5 focus:border-rose dark:bg-gray-700 dark:placeholder-gray-400 dark:text-white dark:focus:border-rose focus:outline-white focus:outline-offset-0"
            placeholder="Tanggal lahir"
          />
          <div
          id="birthdate_error"
          class="mt-1 text-sm sm:text-base text-red-700"
        ></div>
        </div>
      </div>

      <div class="w-full flex justify-center">
        <button
          type="submit"
          id="btn-submit"
          class="text-white bg-rose focus:ring-4 focus:outline-none focus:ring-rose font-medium text-sm sm:text-base w-full sm:w-auto px-5 py-2.5 text-center"
        >
          Buat
        </button>
      </div>
    </form>

    <div class="w-full mt-7 text-center">
      <p class="text-sm sm:text-base">Sudah punya akun?</p>
      <a href="/login" class="text-sm sm:text-base text-rose"
        >Login di sini</a
      >
    </div>
  </div>
</main>
<script src="/date-picker.js"></script>
<script>
  const eyes = document.querySelectorAll('.eye');
  eyes.forEach((eye) => {
    eye.addEventListener('click', (e) => {
      e.target.querySelector('.eye-svg').classList.toggle('hidden');
      e.target.querySelector('.eye-slash-svg').classList.toggle('hidden');

      const input = e.target.closest('div').querySelector('input');
      input.type === 'password'
        ? (input.type = 'text')
        : (input.type = 'password');
    });
  });

  const disableBtn = () => {
    const elementErr = document.querySelectorAll('[id$="error"]');
    const btnSubmit = document.querySelector('#btn-submit');
    const disable = {};
    elementErr.forEach((el) => {
      if (el.textContent !== '') {
        disable.on = true;
      } else {
        disable.off = true;
      }
    });

    if ('on' in disable) {
      btnSubmit.classList.add('btn-disabled');
      btnSubmit.classList.remove('hover:bg-rose');
      btnSubmit.setAttribute('disabled', '');
    } else {
      btnSubmit.classList.remove('btn-disabled');
      btnSubmit.classList.add('hover:bg-rose');
      btnSubmit.removeAttribute('disabled');
    }
  };

  const username = document.querySelector('#username');
  const usernameError = document.querySelector('#username_error');
  usernameError.textContent = '';
  const usernameEventValidation = (e) => {
    if (e.target.value.indexOf(' ') > 0) {
      usernameError.textContent = 'Username tidak boleh mengandung spasi';
    } else if (!(/^[a-z0-9_\.]*$/.test(e.target.value))) {
      usernameError.textContent = 'Gunakan huruf kecil, nomor, karakter titik (.) dan underscore (_)';
    } else if (e.target.value.length === 0) {
      (usernameError.textContent = 'Username harus diisi');
    } else if (e.target.value.length < 6) {
      usernameError.textContent = 'Username minimal memiliki 6 karakter';
    } else {
      usernameError.textContent = '';
    }
    disableBtn();
  }
  username.addEventListener('keyup', (e) => {
    usernameEventValidation(e);
  });
  username.addEventListener('focusout', (e) => {
    usernameEventValidation(e);
  });

  const emailError = document.querySelector('#email_error');
  const email = document.querySelector('#email');
  emailError.textContent = '';
  const emailEventValidation = (e) => {
    if (e.target.value.length === 0) {
      emailError.textContent = 'Email harus diisi';
    } else if (!(/^[a-z0-9\.\@]*$/.test(e.target.value))){
      emailError.textContent = 'Masukkan format email yang benar. Huruf kecil a-z, angka 0-9, @ dan .';
    } else {
      emailError.textContent = '';
    }
    disableBtn();
  }
  email.addEventListener('keyup', (e) => {
    emailEventValidation(e);
  });
  email.addEventListener('focusout', (e) => {
    emailEventValidation(e);
  });

  const password = document.querySelector('#password');
  const passwordError = document.querySelector('#password_error');
  passwordError.textContent = '';
  const passwordEventValidation = (e) => {
    if (e.target.value.length === 0) {
      passwordError.textContent = 'Password harus diisi'
    } else if (e.target.value.length < 6) {
      passwordError.textContent = 'Password minimal memiliki 6 karakter'
    } else {
      passwordError.textContent = ''
    }
    disableBtn();
  };
  password.addEventListener('keyup', (e) => {
    passwordEventValidation(e);
  });
  password.addEventListener('focusout', (e) => {
    passwordEventValidation(e);
  });

  const confirmPassword = document.querySelector('#confirm_password');
  const confirmPasswordError = document.querySelector(
    '#confirm_password_error'
  );
  confirmPasswordError.textContent = '';
  const confirmPasswordEventValidation = (e) => {
    if (e.target.value !== password.value) {
      confirmPasswordError.textContent = 'Konfirmasi password berbeda dengan password';
    } else {
      confirmPasswordError.textContent = ''
    }
    disableBtn();
  };
  confirmPassword.addEventListener('keyup', (e) => {
    confirmPasswordEventValidation(e);
  });

  const namaLengkap = document.querySelector('#nama_lengkap');
  const namaLengkapError = document.querySelector('#nama_lengkap_error');
  namaLengkapError.textContent = '';
  const namaLengkapEventValidation = (e) => {
    if (e.target.value.length === 0) {
      namaLengkapError.textContent = 'Nama lengkap harus diisi'
    } else if (e.target.value.length < 3) {
      namaLengkapError.textContent = 'Nama lengkap minimal memiliki 3 karakter';
    } else {
      namaLengkapError.textContent = ''
    }
    disableBtn();
  };
  namaLengkap.addEventListener('keyup', (e) => {
    namaLengkapEventValidation(e);
  });
  namaLengkap.addEventListener('focusout', (e) => {
    namaLengkapEventValidation(e);
  });

  const namaPanggilan = document.querySelector('#nama_panggilan');
  const namaPanggilanError = document.querySelector('#nama_panggilan_error');
  namaPanggilanError.textContent = '';
  const namaPanggilanEventValidation = (e) => {
    if (e.target.value.length === 0) {
      namaPanggilanError.textContent = 'Nama panggilan harus diisi'
    } else if (e.target.value.length < 3) {
      namaPanggilanError.textContent = 'Nama panggilan minimal memiliki 3 karakter';
    } else {
      namaPanggilanError.textContent = ''
    }
    disableBtn();
  };
  namaPanggilan.addEventListener('keyup', (e) => {
    namaPanggilanEventValidation(e);
  });
  namaPanggilan.addEventListener('focusout', (e) => {
    namaPanggilanEventValidation(e);
  });

  const gender = document.querySelectorAll('input[name=gender]');
  gender.forEach((el) => {
    const genderError = document.querySelector('#gender_error');
    el.addEventListener('change', () => {
      genderError.textContent = '';
    });
  });

  const birthdate = document.querySelector('#birthdate');
  const birthdateError = document.querySelector('#birthdate_error');
  birthdate.addEventListener('focusout', (e) => {
    const now = new Date();
    const timeInput = new Date(birthdate.value);
    if (timeInput > now) {
      birthdateError.textContent = 'Tanggal lahir tidak valid. Harus di masa lalu';
    } else {
      birthdateError.textContent = '';
    }
    disableBtn();
  });

  const form = document.querySelector('form');
  form.addEventListener('submit', async (e) => {
    e.preventDefault();

    const username = document.querySelector('#username').value;
    const email = document.querySelector('#email').value;
    const password = document.querySelector('#password').value;
    const nama_lengkap = document.querySelector('#nama_lengkap').value;
    const nama_panggilan = document.querySelector('#nama_panggilan').value;
    const gender = document.querySelector('input[name=gender]:checked').value;
    const birthdate = document.querySelector('#birthdate').value;

    const payload = {
      username,
      email,
      password,
      nama_lengkap,
      nama_panggilan,
      gender,
      birthdate,
    };

    try {
      const res = await fetch(`<%= endpoint %>/signup`, {
        method: 'POST',
        body: JSON.stringify(payload),
        headers: { 'Content-Type': 'application/json' },
      });
      const data = await res.json();

      if (data.user) {
        location.assign('/login');
      }

      if (data.errors) {
        usernameError.textContent = data.errors.username || null;
        emailError.textContent = data.errors.email || null;

      }
    } catch (err) {
      console.log(err);
      // TODO nanti mengerjakan ini.
    }
  });
</script>
<%- include('../partials/footer') %>
